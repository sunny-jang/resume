{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/contract/ContractInfoBox.svelte","../../src/components/header/BigHeader.svelte","../../src/components/introduction/Introduction.svelte","../../src/components/content/Projects.svelte","../../src/components/content/Experiences.svelte","../../src/components/content/Education.svelte","../../src/components/content/Articles.svelte","../../src/data/index.svelte","../../src/components/content/Skills.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.55.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\r\n    export let title;\r\n    export let list;\r\n</script>\r\n\r\n<div class=\"contract_info_box\">\r\n    <h3>{title}</h3>\r\n    {#each list as item}\r\n        <dl>\r\n        <dt>{item.label}</dt>\r\n        <dd><a href={item.href}>{item.text}</a></dd>\t\t\r\n    </dl>\r\n    {/each}\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n.contract_info_box {\r\n    dl {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        dt {\r\n            width: 100px;\r\n        }\r\n    }\r\n}\r\n</style>","<script>\r\nexport let title;\r\nexport let sideEle;\r\n</script>\r\n\r\n<h2>\r\n    {title}\r\n    {#if sideEle}{sideEle}{/if}\r\n</h2>\r\n\r\n<style>\r\n    h2 {\r\n        color: orange;\r\n        padding: 50px 0px 10px;\r\n        font-size: 30px;\r\n        margin: 0;\r\n    }\r\n</style>","<script>\r\n    import BigHeader from \"../header/BigHeader.svelte\";\r\n\r\nexport let introduction;\r\n</script>\r\n\r\n<div class=\"introduction\">\r\n    <BigHeader title=\"INTRODUCTION\" />\r\n    <span class=\"who_i_am\">저는 <span>______</span> 엔지니어입니다.</span>\r\n    <div class=\"introduction_text\">\r\n        {@html \r\n            introduction\r\n        }\r\n    \r\n    </div>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n    .who_i_am {\r\n        margin-bottom: 20px;\r\n        display: block;\r\n        font-weight: bold;\r\n        font-size: 20px;\r\n    }\r\n\r\n</style>","<script>\r\nimport BigHeader from '../header/BigHeader.svelte';\r\nexport let title;\r\nexport let projects = [];\r\n</script>\r\n{#if title}\r\n    <BigHeader title={title} sideEle={`(${projects.length})`} />\r\n    {/if}\r\n{#each projects as project}\r\n    <div class=\"project_info\">\r\n        <h5>\r\n            {project.projectTitle}\r\n            <div class=\"project_detail\">\r\n                <span>({project.period})</span>\r\n                <span> - </span>\r\n                <span>{project.projectGroup}</span>\r\n            </div>\r\n        </h5>\r\n        {#if project.description}\r\n            <p>{@html project.description}</p>\r\n        {/if}\r\n        \r\n    </div>\r\n{/each}\r\n\r\n<style lang=\"scss\">\r\n    .project_info {\r\n        border-bottom: 1px solid #eee;\r\n\r\n        &:last-child {\r\n            border: none;\r\n        }\r\n    }\r\n    h5 {\r\n        font-size: 24px;\r\n        margin-bottom: 10px;\r\n        margin-top: 20px;\r\n        padding-left: 15px;\r\n        position: relative;\r\n        font-weight: 700;\r\n\r\n        &:after {\r\n            display: block;\r\n            content: '';\r\n            width: 6px;\r\n            height: 6px;\r\n            border-radius: 6px;\r\n            background-color: darkcyan;\r\n            position: absolute;\r\n            top: 10px;\r\n            left: 0;\r\n        }\r\n    }\r\n\r\n    .project_detail {\r\n        display: inline-block;\r\n\r\n        span {\r\n            font-size: 16px;\r\n            line-height: 1.4;\r\n            color: gray;\r\n            font-weight: normal;\r\n        }\r\n    }\r\n\r\n    p {\r\n        white-space: pre-line;\r\n        font-size: 16px;\r\n        line-height: 1.6;\r\n    }\r\n</style>","<script>\r\nimport BigHeader from '../header/BigHeader.svelte';\r\n    import Projects from './Projects.svelte';\r\nexport let item;\r\nexport let title;\r\n</script>\r\n\r\n<div class=\"content_section\">\r\n    <BigHeader title={title} />\r\n    <div class=\"content\">\r\n    {#each item.workList as experience}\r\n        <div class=\"experience_projects\">\r\n            <div class=\"experience\">\r\n                <div class=\"content_left\">\r\n                    <h4>{experience.companyName}</h4>\r\n                    <div>{experience.period}</div>\r\n                </div>\r\n                <div class=\"content_right\">\r\n                    <h5>{experience.description}</h5>\r\n                    <ul>\r\n                    {#each experience.detailList as detail}\r\n                        <li class=\"detail\">{detail.content}</li>\r\n                    {/each}\r\n                        <li>Tech Skills: \r\n                            {#each experience.techSkils as skills}\r\n                                <span class=\"skil\">{skills}</span>\r\n                            {/each}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <!--<Projects title=\"\" projects={experience.projects} />-->\r\n        </div>\r\n        \r\n    {/each}\r\n    </div>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n.experience_projects {\r\n    border-top: 1px solid #eee;\r\n\r\n    &:first-child {\r\n        border: none;\r\n    }\r\n}\r\n.experience {\r\n    display: flex;\r\n    padding: 20px 0;\r\n    h4 {\r\n        font-size: 24px;\r\n        margin-top: 0px;\r\n        margin-bottom: 30px;\r\n        display: inline-block;\r\n        padding-bottom: 5px;\r\n        padding-left: 10px;\r\n        border-left: 4px solid orange;\r\n    }\r\n\r\n    h5 {\r\n        margin-top: 0;\r\n    }\r\n\r\n    .content_left {\r\n        width: 30%;\r\n    }\r\n\r\n    .content_right {\r\n        width: 70%;\r\n    }\r\n\r\n    .detail {\r\n        font-size: 16px;\r\n    }\r\n\r\n    .skil {\r\n        padding: 3px 5px;\r\n        background: darkcyan;\r\n        color: white;\r\n        border-radius: 6px;\r\n        font-size: 12px;\r\n        margin-right: 5px;\r\n        word-break: break-all;\r\n        display: inline-block;\r\n    }\r\n}\r\n\r\n@media (max-width: 640px) {\r\n\t\t.experience {\r\n            flex-direction: column;\r\n            .content_right,\r\n            .content_left {\r\n                width: 100%;\r\n            }\r\n        }\r\n\t}\r\n</style>","<script>\r\n    import BigHeader from \"../header/BigHeader.svelte\";\r\n\r\n</script>\r\n<BigHeader title=\"EDUCATION\" />\r\n\r\n    <div class=\"\">\r\n        <div class=\"row\">\r\n            <h4>2017. 02 ~ 2022. 02</h4>\r\n            <div class=\"group\">한양 사이버대학교 (컴퓨터공학과)</div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <h4>2020. 10 ~ 2021. 04</h4>\r\n            <div class=\"group\">KH정보교육원 (디지털컨버전스 융합 응용SW 개발자)</div>\r\n        </div>\r\n    </div>\r\n<style lang=\"scss\">\r\n    .row {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-bottom: 10px;\r\n\r\n        h4 {\r\n            margin: 0;\r\n            margin-right: 30px;\r\n            font-size: 20px;\r\n            color: gray;\r\n        }\r\n\r\n        .group {\r\n            font-weight: bold;\r\n        }\r\n    }\r\n</style>","<script>\r\n    import BigHeader from \"../header/BigHeader.svelte\";\r\n\r\n</script>\r\n<BigHeader title=\"Presentation & Article\" />\r\n<div>\r\n    <hr>\r\n    <p>(2022. 2. 25) <strong>webpack 라이브러리 걷어내고 커스텀하기</strong></p>\r\n    <p><a href=\"https://sunny-jang.tistory.com/47?category=1263281\">https://sunny-jang.tistory.com/47?category=1263281</a></p>\r\n    <p>(2022. 4. 13) <strong>Webpack이란? Webpack 개념, 주요요소(Entry, Output, Loader, Plugin)</strong></p>\r\n    <p><a href=\"https://sunny-jang.tistory.com/48\">https://sunny-jang.tistory.com/48</a></p>\r\n    <p>(2023. 1. 11) <strong>useEffect, useState만 사용하지말고 useMemo, useCallback 사용해보자</strong></p>\r\n    <p><a href=\"https://sunny-jang.tistory.com/61\">https://sunny-jang.tistory.com/61</a></p>\r\n    <p>(2021. 11. 5) <strong>React/JavaScript 에서 React/TypeScript 마이그레이션 중 발생한 오류</strong></p>\r\n    <p><a href=\"https://sunny-jang.tistory.com/42?category=1239166\">https://sunny-jang.tistory.com/42?category=1239166</a></p>\r\n    <p>(2022. 10. 9)<strong>프론트앤드 개발 시 고려사항</strong></p>\r\n    <p><a href=\"https://sunny-jang.tistory.com/54\">https://sunny-jang.tistory.com/54</a></p>\r\n    <p>(2022. 10. 17) <strong>웹뷰 개발을 설계하는 방식</strong></p>\r\n    <p><a href=\"https://sunny-jang.tistory.com/56\">https://sunny-jang.tistory.com/56</a></p>\r\n    <p>(2022. 8. 22) <strong>Code Seoul 밋업&nbsp;참여!</strong></p>\r\n    <p><a href=\"https://sunny-jang.tistory.com/50\">https://sunny-jang.tistory.com/50</a></p>\r\n    <p>(2022. 7. 28) <strong>벌써 1년이나&nbsp;됐다니 1년간의 회고!</strong></p>\r\n    <p><a href=\"https://sunny-jang.tistory.com/49\">https://sunny-jang.tistory.com/49</a></p>\r\n    </div>\r\n\r\n<style>\r\n    p {\r\n        margin: 0;\r\n        margin-bottom: 5px;\r\n    }\r\n</style>","<script context=\"module\">\r\nexport let name = '장은선';\r\nexport let engName = 'Sunny';\r\nexport let lastUpdated = '2023.01.15';\r\n\r\nexport let channels = [\r\n    {\r\n        label: 'Github',\r\n        href: 'https://github.com/sunny-jang',\r\n        text: 'https://github.com/sunny-jang'\r\n    },\r\n    {\r\n        label: 'Blog',\r\n        href: 'https://sunny-jang.tistory.com',\r\n        text: 'https://sunny-jang.tistory.com'\r\n    },\r\n];\r\nexport let contract = [\r\n    {\r\n        label: 'Email',\r\n        text: 'esunbest@gmail.com'\r\n    },\r\n];\r\n\r\nexport let introduction = [\r\n    '프로젝트 결과물이 성과를 보였을 때 가장 성취감이 큰',\r\n    '개발 생산성을 높이는기술을 서비스에 접목시킬 때가 즐거운',\r\n    '새로운 것을 배우는 것에 두려움이 없는',\r\n    '한줄의 코드로도 여러 삶에 가치를 더해줄 수 있는',\r\n]\r\n\r\n\r\nexport let introductionText = `\r\n    안녕하세요. 4년차 프론트앤드 개발자 장은선입니다. </br></br>\r\n\r\n    웹/앱 서비스의 프론트앤드 개발과 스타트업 개발자로서의 많은 경험을 가지고 있습니다. React, javsScript, typeScript, Redux, SWR, Git 등을 사용하여 프로덕션 서비스를 설계 개발, \r\n    운영한 경험으로 확장성과 유지보수성이 높은 개발을 하기 위해 언제나 고민하고 있습니다. </br>\r\n    프론트앤드 개발자로 다수의 프로젝트에 참여해 갖춘 업무처리속도와 다양한 플랫폼 기반의 UX개발 경험들은 제 강점중의 하나입니다.</br>\r\n    신속한 서비스 제공과 안정화된 코드로 유저들에게 편리함과 신뢰할 수 있는 서비스의 경험을 남기기 위해 노력하고 있습니다.</br></br>\r\n\r\n    새로운 기술에도 관심과 궁금증이 많아 다양한 개발 밋업에 참여하고, 개발그룹에서의 네트워킹과 토론을 즐깁니다.</br>\r\n    언젠가 프론트 앤드 개발에 정점을 찍어 웹 개발에 관련 서적을 내고, 많은 사람들에게 지식을 전파할 수 있는 개발자가 되겠다는 목표가 있습니다. </br>\r\n    이를 이루기 위해 꾸준한 공부를 하고, 웹개발을 배우는 동료가 있으면 제가 가진 지식으로 언제나 도움을 주려고 합니다.</br></br>\r\n\r\n    서비스란, 사람들이 머무르고 계속 사용하고 싶은 프로그램을 제공하는 것이라고 생각합니다.</br>\r\n    저의 다양한 경험들을 활용해 사랑받는 서비스를 개발해 지속적으로 성장해 나가고 싶습니다. </br>\r\n`\r\n\r\nexport let workSection = {\r\n    workList: [\r\n        {\r\n            companyName: '판도라티비',\r\n            period: '2021-07~ 재직 중',\r\n            description: '경제에 관심을 가지는 유저들의 블록체인 커뮤니티 web과 mobile 메인 프론트앤드 개발 담당',\r\n            detailList: [\r\n                { content: '글로벌 IDO 중개 플랫폼 오픈 web3 서비스 운영 및 유지보수' },\r\n                { content: '사용자 Needs 에 맞는 사용성 개선과 신규 비즈니스 로직 구현' },\r\n                { content: '레거시 청산 및 기존 비즈니스 유지보수' },\r\n                { content: '웹 서비스와 포맷이 맞지 않는 앱의 글쓰기에서 웹뷰에 CkEditor를 사용해 글쓰기 기능 통일' },\r\n                { content: 'typeScirpt, swr 도입으로 코드 프로젝트 퀄리티 개선' },\r\n            ],\r\n            techSkils: ['React', 'swr', 'redux-saga', 'less', 'javaScript', 'typeScript'],\r\n            projects: [\r\n                {\r\n                    projectTitle: 'Cobak 블록체인 커뮤니티 운영/리뉴얼',\r\n                    projectGroup: 'Pandora.TV',\r\n                    period: '2021년 07월 - 진행 중',\r\n                    description: `블록체인 커뮤니티 Cobak 운영 및 고도화\r\n\r\n                        - 상시 운영업무를 하며 유저들의 피드백을 받아 WEB/MOBILE 플랫폼의 기능 고도화와 신규 기능 개발에 기여\r\n                        - 운영업무에 필요한 Back-office 개발. <b>운영업무의 편리성을 향상 및 반복 업무 감축</b>\r\n                        - 신규 게시글 리스트 UI 컴포넌트 신규 개발, 기존 리스트 방식을 신규 UI로 전체 교체\r\n                        - 기존 리덕스에서 데이터 호출 방식 -> <b>SWR캐싱 도입으로 재 접속 화면 로딩속도 개선</b>에 기여\r\n                        - Dynamic Import 도입, gzip 압축방식, code-spliting <b>적용으로 FCP 6.3s -> 0.9s로 개선</b>\r\n                    `\r\n                },\r\n                {\r\n                    projectTitle: '뉴스속보/ 뉴스매체 커스텀 기능 개발',\r\n                    projectGroup: 'Pandora.TV',\r\n                    period: '2022년 10월 - 2019년 12월',\r\n                    description: `<b>연합뉴스, 파이내내셜 쥬스 등 타 뉴스 매체의 api</b>를 받아와 코박 서비스 내에서 주요 경제뉴스를 모아 보는 웹 신규 서비스 개발\r\n                    \r\n                        - 원하는 매체사의 뉴스만을 모아볼 수 있도록 나만의 커스텀 기능 개발\r\n                        - 각 매체사의 실시간 데이터를 수집해 <b>실시간 속보 갱신</b>\r\n                        - 비회원, 회원을 기준 디폴트 뉴스 및 커스텀 리스트를 분리\r\n                        `\r\n                },\r\n                {\r\n                    projectTitle: '앱 서비스 글쓰기/상세보기 웹뷰 전환',\r\n                    projectGroup: 'Pandora.TV',\r\n                    period: '2022년 08월 - 2022년 10월',\r\n                    description: `- 웹에서 작성한 글을 앱에서 수정 시 포맷 이슈가 발생하여 <b>네이티브 텍스트 펜집기로 구현되어 있는 화면을 신규 웹뷰 화면으로 전환</b>작업\r\n                        - Ckeditor를 사용해 에디터 구현.\r\n                        - <b>네이티브 앱 ios와 andriod 통신하는 appInterface 개발</b> 및 문서정리\r\n                        `\r\n                },\r\n                {\r\n                    projectTitle: 'Global IDO 토큰중개 서비스',\r\n                    projectGroup: 'Pandora.TV',\r\n                    period: '2022년 06월 - 2022년 08월',\r\n                    description: `web3를 사용한 지갑연동 및 상태 관리\r\n                        - i18n라이브러리를 접목하여 다국어 기능을 지원.\r\n                        - 자체토큰 스테이킹/거버넌스 기능\r\n                        `\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            companyName: 'Evolve Branding (Canada)',\r\n            period: '2020-03~2020-09',\r\n            description: '비지니스 브랜딩을 돕는 캐나다 기업의 인턴십 프로그램의 팀 리더, Flutter 프레임워크를 사용하는 4개 프로젝트 참여',\r\n            detailList: [\r\n                { content: 'Flutter/Dart를 사용한 IOS/Android App 제작' },\r\n                { content: 'Google 번역기 API 라이브러리 이용,  목소리 인식 실시간 번역 서비스' },\r\n                { content: 'Neumorphic 커스텀 테마 패키지 위젯 개발' },\r\n            ],\r\n            techSkils: ['Flutter', 'Dart', 'firebase', 'Hybrid App'],\r\n            projects: [\r\n                {\r\n                    projectTitle: 'CATBOOK (SNS)',\r\n                    projectGroup: 'Evolve Branding',\r\n                    period: '2020년 04월 - 2020년 05월',\r\n                    description: `반려묘들을 위한 고양이 자랑 커뮤니티/SNS 서비스\r\n                    - <b>Newmorphic 커스텀 테마 위젯 모듈을 개발</b>해 전반적인 UI/UX 개발에 적용\r\n                    - Firebase를 사용해 <b>DB 구축 및 게시글 작성, 수정, 삭제, 조회 기능</b>을 구현 \r\n                    - <b>Firebase 의 authrozation 기능</b>을 사용해 회원가입/로그인 보안 강화\r\n                        `\r\n                },\r\n                {\r\n                    projectTitle: 'Evolve Store',\r\n                    projectGroup: 'Evolve Branding',\r\n                    period: '2020년 05월 - 2020년 06월, 2022년 07월 - 2022년 08월',\r\n                    description: `인턴십 프로그램에 참여하여 얻은 Score로 물품을 구매할 수 있는 인턴십 내 스토어 앱 개발\r\n\r\n            - firebase realtime 데이터베이스로 각 프로젝트 내의 채팅기능 개발\r\n            - 어드민에게만 프로젝트 생성 및 인턴 배정 권한을 적용\r\n            - <b>팀 리더로 프런트 엔드 개발 및 지원 백엔드 프로그래밍을 주도</b>. 설계 기능의 기술적 타당성 및 최적화 할 수 있는 방안을 모색.\r\n                        `\r\n                },\r\n                {\r\n                    projectTitle: 'Dictionary & Translator',\r\n                    projectGroup: 'Evolve Branding',\r\n                    period: '2020년 06월 - 2020년 09월',\r\n                    description: `목소리를 인식하여 직역해주는 번역 프로그램 개발\r\n\r\n            - <b>google translator API</b>를 활용하여 직접 문장을 입력하여 번역기능을 제공하는 것을 베이스 개발\r\n            - 제공하는 10개 이상의 언어에서 <b>목소리 인식 번역 기능</b>을 추가를 위해 voice reconizer 패키지 접목.\r\n            - 번역 후 모르는 단어들은 바로 찾아볼 수 있도록 사전 기능을 제공 편리성을 개선.\r\n                        `\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            companyName: 'F9dev',\r\n            period: '2017-06~2019-01',\r\n            description: '하이브리드 앱을 의뢰받아 구축 및 설계, 자사 e커머스 ClosedShop의 서비스 운영',\r\n            detailList: [\r\n                { content: 'AngularJS, Ionic 을 사용한 WebView Hybrid App 개발' },\r\n                { content: 'Canvas를 사용하여 데이터를 시각화' },\r\n                { content: 'Monthly 개발 컨퍼런스에 참여해 구성원으로서 기술로 회사의 비지니스에 더 많이 기여할 수 있는 방향을 고민' },\r\n                { content: '초기 멤버로써 서비스에 애정을 가지고 고객의 시선에서 경험을 최우선으로 하는 업무 분위기에서 프론트앤드 개발' },\r\n            ],\r\n            techSkils: ['AngularJs', 'Ionic', 'javaScript', 'ajax', 'html', 'sass', 'less'],\r\n            projects: [\r\n                {\r\n                    projectTitle: '클로즈 샵(e-Commerce)',\r\n                    projectGroup: 'F9dev',\r\n                    period: '2018년 1월 - 2019년 01월',\r\n                    description: `<b>F9dev 자체 전자상거래 웹사이트</b>를 구축 및 운영.\r\n\r\n            - 대규모 e-Commerce서비스로 성장하기 위한 디테일에 초점을 맞춰 개발\r\n            - 느린 속도를 유발하는 <b>js 애니메이션을 css 애니메이션으로 교체</b>작업을 하여 라이트한 웹으로 퍼포먼스 개선\r\n                        `\r\n                },\r\n                {\r\n                    projectTitle: 'SPOTV (스포츠 스트리밍 서비스)',\r\n                    projectGroup: 'F9dev',\r\n                    period: '2018년 4월 - 2018년 7월',\r\n                    description: `SPOTV의 웹사이트와 하이브리드 앱 프론트엔드 개발\r\n\r\n            - 넷플릭스의 참조해 전체적인 UI/UX를 디자인 및 구축\r\n            - <b>앱에서 작동하는 웹 동작의 차이(터치 모션 등)를 축소하여 퍼포먼스 개선</b>\r\n                        `\r\n                },\r\n                {\r\n                    projectTitle: 'RnbStory Hybrid APP (SNS)',\r\n                    projectGroup: 'F9dev',\r\n                    period: '2018년 4월 - 2018년 6월',\r\n                    description: `RnbStory 웹사이트와 하이브리드 앱 프론트엔드 개발.\r\n\r\n            - 유명한 SNS 웹사이트나 애플리케이션을 검토해 기술과 오픈 소스를 참조\r\n            - 웹 사이트 정비를 위한 프런트 엔드 개발 및 지원 백엔드 프로그래밍을 주도했습니다. 설계 기능의 기술적 타당성 및 최적 기능 보장\r\n                        `\r\n                },\r\n                {\r\n                    projectTitle: 'BuyCar(중고차) Hybrid App',\r\n                    projectGroup: 'F9dev',\r\n                    period: '2017년 8월 - 2019년 01월',\r\n                    description: `자동차 중고거래 및 경매 플랫폼 운영 및 유지보수\r\n\r\n            - <b>브랜드, 기능, 중고차의 구성 요소를 디자인적 요소로 구현하여 사용자에게 편리성을 제공</b> \r\n            - 경매가 입찰을 calculator 컴포넌트 간편사용을 위한 <b>일괄 증가, 현재가 기준 일정금액 증가 등 기능 개발</b>에 기여\r\n                        `\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            companyName: '㈜메이젠인터렉트',\r\n            period: '2016-01~2017-01',\r\n            description: '공공기관, 공기업, 큰 규모의 다양한 프로젝트의 마크업 개발 ',\r\n            detailList: [\r\n                { content: '다수의 프로젝트 웹 접근성 90%→98% 불합격 수정 및 마크 획득' },\r\n                { content: '접근성이 지켜지지 않은 사이트들에 시맨틱 마크업을 적용해 SEO작업, 접근성 개선' },\r\n                { content: '브라우저 호환성 준수 등 크로스 브라우징 작업' },\r\n                { content: 'Mobile First 휴대폰, 테블릿, PC 등의 다양한 디바이스 반응형 작업' },\r\n                { content: '프로젝트 레이아웃과 페이지 이슈에 대응하는 업무를 진행' },\r\n            ],\r\n            techSkils: ['Html', 'css', 'javaScript', 'jQuery'],\r\n            projects: [\r\n                {\r\n                    projectTitle: '신한은행 임직원 강의 웹사이트 리뉴얼',\r\n                    projectGroup: 'Mayzen',\r\n                    period: '2016년 12월 - 2017년 12월',\r\n                    description: `- <b>SEO, 장애인을 위한 웹 접근성, 체계적인 구조를 갖춘 웹사이트 구축</b>\r\n            - 유지보수를 위한 가이드 문서를 만들었습니다.\r\n                        `\r\n                },\r\n                {\r\n                    projectTitle: 'Hyundai Life web channel Construct',\r\n                    projectGroup: 'Mayzen',\r\n                    period: '2016년 8월 - 2016년 11월',\r\n                    description: `- UI개발에 넥사크로 사용 `\r\n                },\r\n                {\r\n                    projectTitle: '군인공제회 대학원 입학 홈페이지',\r\n                    projectGroup: 'Mayzen',\r\n                    period: '2017년 7월 - 2017년 8월',\r\n                    description: null\r\n                },\r\n                {\r\n                    projectTitle: '농협캐미컬 웹사이트 리뉴얼 UI 마크업 개발',\r\n                    projectGroup: 'Mayzen',\r\n                    period: '2016년 2월 - 2016년 4월',\r\n                    description: null\r\n                },\r\n            ]\r\n        },\r\n    ]\r\n}\r\n\r\nexport const projects = [\r\n    {\r\n        projectTitle: 'Cobak 블록체인 커뮤니티 운영/리뉴얼',\r\n        projectGroup: 'Pandora.TV',\r\n        period: '2021년 07월 - 진행 중',\r\n        description: `블록체인 커뮤니티 Cobak 운영 및 고도화\r\n\r\n            - 상시 운영업무를 하며 유저들의 피드백을 받아 WEB/MOBILE 플랫폼의 기능 고도화와 신규 기능 개발에 기여\r\n            - 운영업무에 필요한 Back-office 개발. <b>운영업무의 편리성을 향상 및 반복 업무 감축</b>\r\n            - 신규 게시글 리스트 UI 컴포넌트 신규 개발, 기존 리스트 방식을 신규 UI로 전체 교체\r\n            - 기존 리덕스에서 데이터 호출 방식 -> <b>SWR캐싱 도입으로 재 접속 화면 로딩속도 개선</b>에 기여\r\n            - Dynamic Import 도입, gzip 압축방식, code-spliting <b>적용으로 FCP 6.3s -> 0.9s로 개선</b>\r\n        `\r\n    },\r\n    {\r\n        projectTitle: '뉴스속보/ 뉴스매체 커스텀 기능 개발',\r\n        projectGroup: 'Pandora.TV',\r\n        period: '2022년 10월 - 2019년 12월',\r\n        description: `<b>연합뉴스, 파이내내셜 쥬스 등 타 뉴스 매체의 api</b>를 받아와 코박 서비스 내에서 주요 경제뉴스를 모아 보는 웹 신규 서비스 개발\r\n        \r\n            - 원하는 매체사의 뉴스만을 모아볼 수 있도록 나만의 커스텀 기능 개발\r\n            - 각 매체사의 실시간 데이터를 수집해 <b>실시간 속보 갱신</b>\r\n            - 비회원, 회원을 기준 디폴트 뉴스 및 커스텀 리스트를 분리\r\n            `\r\n    },\r\n    {\r\n        projectTitle: '앱 서비스 글쓰기/상세보기 웹뷰 전환',\r\n        projectGroup: 'Pandora.TV',\r\n        period: '2022년 08월 - 2022년 10월',\r\n        description: `- 웹에서 작성한 글을 앱에서 수정 시 포맷 이슈가 발생하여 <b>네이티브 텍스트 펜집기로 구현되어 있는 화면을 신규 웹뷰 화면으로 전환</b>작업\r\n            - Ckeditor를 사용해 에디터 구현.\r\n            - <b>네이티브 앱 ios와 andriod 통신하는 appInterface 개발</b> 및 문서정리\r\n            `\r\n    },\r\n    {\r\n        projectTitle: 'Global IDO 토큰중개 서비스',\r\n        projectGroup: 'Pandora.TV',\r\n        period: '2022년 06월 - 2022년 08월',\r\n        description: `web3를 사용한 지갑연동 및 상태 관리\r\n            - i18n라이브러리를 접목하여 다국어 기능을 지원.\r\n            - 자체토큰 스테이킹/거버넌스 기능\r\n            `\r\n    },\r\n    {\r\n        projectTitle: 'CATBOOK (SNS)',\r\n        projectGroup: 'Evolve Branding',\r\n        period: '2020년 04월 - 2020년 05월',\r\n        description: `반려묘들을 위한 고양이 자랑 커뮤니티/SNS 서비스\r\n        - <b>Newmorphic 커스텀 테마 위젯 모듈을 개발</b>해 전반적인 UI/UX 개발에 적용\r\n        - Firebase를 사용해 <b>DB 구축 및 게시글 작성, 수정, 삭제, 조회 기능</b>을 구현 \r\n        - <b>Firebase 의 authrozation 기능</b>을 사용해 회원가입/로그인 보안 강화\r\n            `\r\n    },\r\n    {\r\n        projectTitle: 'Evolve Store',\r\n        projectGroup: 'Evolve Branding',\r\n        period: '2020년 05월 - 2020년 06월, 2022년 07월 - 2022년 08월',\r\n        description: `인턴십 프로그램에 참여하여 얻은 Score로 물품을 구매할 수 있는 인턴십 내 스토어 앱 개발\r\n\r\n- firebase realtime 데이터베이스로 각 프로젝트 내의 채팅기능 개발\r\n- 어드민에게만 프로젝트 생성 및 인턴 배정 권한을 부여\r\n- <b>팀 리더로 프런트 엔드 개발 및 지원 백엔드 프로그래밍을 주도</b>. 설계 기능의 기술적 타당성 및 최적화 할 수 있는 방안을 모색.\r\n            `\r\n    },\r\n    {\r\n        projectTitle: 'Dictionary & Translator',\r\n        projectGroup: 'Evolve Branding',\r\n        period: '2020년 06월 - 2020년 09월',\r\n        description: `목소리를 인식하여 직역해주는 번역 프로그램 개발\r\n\r\n- <b>google translator API</b>를 활용하여 직접 문장을 입력하여 번역기능을 제공하는 것을 베이스 개발\r\n- 제공하는 10개 이상의 언어에서 <b>목소리 인식 번역 기능</b>을 추가를 위해 voice reconizer 패키지 접목.\r\n- 번역 후 모르는 단어들은 바로 찾아볼 수 있도록 사전 기능을 제공 편리성을 개선.\r\n            `\r\n    },\r\n    {\r\n            projectTitle: '클로즈 샵(e-Commerce)',\r\n            projectGroup: 'F9dev',\r\n            period: '2018년 1월 - 2019년 01월',\r\n            description: `<b>F9dev 자체 전자상거래 웹사이트</b>를 구축 및 운영.\r\n\r\n    - 대규모 e-Commerce서비스로 성장하기 위한 디테일에 초점을 맞춰 개발\r\n    - 느린 속도를 유발하는 <b>js 애니메이션을 css 애니메이션으로 교체</b>작업을 하여 라이트한 웹으로 퍼포먼스 개선\r\n                `\r\n        },\r\n        {\r\n            projectTitle: 'SPOTV (스포츠 스트리밍 서비스)',\r\n            projectGroup: 'F9dev',\r\n            period: '2018년 4월 - 2018년 7월',\r\n            description: `SPOTV의 웹사이트와 하이브리드 앱 프론트엔드 개발\r\n\r\n    - 넷플릭스의 참조해 전체적인 UI/UX를 디자인 및 구축\r\n    - <b>앱에서 작동하는 웹 동작의 차이(터치 모션 등)를 축소하여 퍼포먼스 개선</b>\r\n                `\r\n        },\r\n        {\r\n            projectTitle: 'RnbStory Hybrid APP (SNS)',\r\n            projectGroup: 'F9dev',\r\n            period: '2018년 4월 - 2018년 6월',\r\n            description: `RnbStory 웹사이트와 하이브리드 앱 프론트엔드 개발.\r\n\r\n    - 유명한 SNS 웹사이트나 애플리케이션을 검토해 기술과 오픈 소스를 참조\r\n    - 웹 사이트 정비를 위한 프런트 엔드 개발 및 지원 백엔드 프로그래밍을 주도했습니다. 설계 기능의 기술적 타당성 및 최적 기능 보장\r\n                `\r\n        },\r\n        {\r\n            projectTitle: 'BuyCar(중고차) Hybrid App',\r\n            projectGroup: 'F9dev',\r\n            period: '2017년 8월 - 2019년 01월',\r\n            description: `자동차 중고거래 및 경매 플랫폼 운영 및 유지보수\r\n\r\n    - <b>브랜드, 기능, 중고차의 구성 요소를 디자인적 요소로 구현하여 사용자에게 편리성을 제공</b> \r\n    - 경매가 입찰을 calculator 컴포넌트 간편사용을 위한 <b>일괄 증가, 현재가 기준 일정금액 증가 등 기능 개발</b>에 기여\r\n                `\r\n        },\r\n        {\r\n            projectTitle: '신한은행 임직원 강의 웹사이트 리뉴얼',\r\n            projectGroup: 'Mayzen',\r\n            period: '2016년 12월 - 2017년 12월',\r\n            description: `- <b>SEO, 장애인을 위한 웹 접근성, 체계적인 구조를 갖춘 웹사이트 구축</b>\r\n    - 유지보수를 위한 가이드 문서를 만들었습니다.\r\n                `\r\n        },\r\n        {\r\n            projectTitle: 'Hyundai Life web channel Construct',\r\n            projectGroup: 'Mayzen',\r\n            period: '2016년 8월 - 2016년 11월',\r\n            description: `- UI개발에 넥사크로 사용 `\r\n        },\r\n        {\r\n            projectTitle: '군인공제회 대학원 입학 홈페이지',\r\n            projectGroup: 'Mayzen',\r\n            period: '2017년 7월 - 2017년 8월',\r\n            description: null\r\n        },\r\n        {\r\n            projectTitle: '농협캐미컬 웹사이트 리뉴얼 UI 마크업 개발',\r\n            projectGroup: 'Mayzen',\r\n            period: '2016년 2월 - 2016년 4월',\r\n            description: null\r\n        },\r\n]\r\n\r\nexport const otherprojects = [\r\n    {\r\n        projectTitle: 'NearBnb',\r\n        period: '2021년 2월 - 2021년 4월',\r\n        projectGroup: '개별 프로젝트',\r\n        description: `현재 위치 기반의 숙소를 찾아 예약할 수 있는 서비스.\r\n            - 호스트계정 - 원하는 기간에 숙소를 등록하는 기능에 기여(90%)\r\n            - google map 기반의 좌표를 기반으로 내 위치 반경을 계산해 지도에 근처 숙소 노출 \r\n            Java, Spring, Orqcle로 백앤드를 구축\r\n        `\r\n    },\r\n    {\r\n        projectTitle: 'C-It',\r\n        period: '2021년 4월 - 2016년 6월',\r\n        projectGroup: '개별 프로젝트',\r\n        description: `IT 관련 주요 뉴스를 모아볼 수 있는 IT news 모아보기 커뮤니티\r\n        - 뉴스등록을 위한 news 모델 설계\r\n        - 커뮤니티 유저 회원가입을 위해 Mail 인증을 구현\r\n        Java, Spring, Orqcle로 백앤드를 구축\r\n        `\r\n    },\r\n]\r\n</script>","<script>\r\n    import BigHeader from \"../header/BigHeader.svelte\";\r\n\r\n</script>\r\n<BigHeader title=\"Skills\" />\r\n<div>\r\n    <p><strong>Frontend</strong></p>\r\n    <ul>\r\n        <li>JS|TS(ES6), HTML, CSS(SCSS,LESS), JSP, Dart</li>\r\n        <li>React, Vue,  Angular, Flutter, Spring</li>\r\n        <li>webpack, redux, swr, Git</li>\r\n    </ul>\r\n</div>\r\n<style></style>","<script>\r\n\timport ContractInfoBox from './components/contract/ContractInfoBox.svelte';\r\n\timport Introduction from './components/introduction/Introduction.svelte';\r\n\timport Experiences from './components/content/Experiences.svelte';\r\n\timport Projects from './components/content/Projects.svelte';\r\n\timport Education from './components/content/Education.svelte';\r\n\timport Articles from './components/content/Articles.svelte';\r\n\timport {name, engName, lastUpdated, channels,contract, introductionText, workSection,projects, otherprojects} from './data/index.svelte';\r\n    import BigHeader from './components/header/BigHeader.svelte';\r\n    import Skills from './components/content/Skills.svelte';\r\n</script>\r\n\r\n<main>\r\n\t<h1><span class=\"deco_bar\" />{name} ({engName})</h1>\r\n\t<span class=\"update_date\">last updated: {lastUpdated}</span>\r\n\t<Introduction introduction={introductionText} />\r\n\t<Skills />\r\n\t<div class=\"div\" />\r\n\t<div class=\"contracts_info\">\r\n\t\t<ContractInfoBox title={'Channels'} list={channels} />\r\n\t\t<ContractInfoBox title={'Contracts'} list={contract} />\r\n\t</div>\r\n\t<Experiences title=\"EXPERIENCES\" item={workSection} />\r\n\t<Projects title=\"PROJECTS\" projects={projects} />\r\n\t<Projects title=\"그 외 프로젝트\" projects={otherprojects} />\r\n\t<Articles />\r\n\t<Education />\r\n</main>\r\n\r\n<style lang=\"scss\">\r\n\tmain {\r\n\t\t/* text-align: center; */\r\n\t\twidth:1000px;\r\n\t\tmargin: 0 auto;\r\n\t\tpadding: 1em;\r\n\t\tbox-sizing: border-box;\r\n\t\tmargin-bottom: 100px;\r\n\t}\r\n\r\n\th1 {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.deco_bar {\r\n\t\twidth: 7px;\r\n\t\tbackground-color: darkcyan;\r\n\t\tdisplay: inline-block;\r\n\t\theight: 40px;\r\n\t\tmargin-right: 10px;\r\n\t}\r\n\r\n\t.update_date {\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.div {\r\n\t\theight: 1px;\r\n\t\tbackground-color: #eee;\r\n\t}\r\n\t\r\n\t@media (max-width: 640px) {\r\n\t\tmain {\r\n\t\t\twidth: 100%;\r\n\t\t\tpadding: 20px;\r\n\t\t\tmax-width: none;\r\n\t\t\tbox-sizing: border-box;\r\n\t\t\tfont-size: 12px;\r\n\t\t}\r\n\t}\r\n</style>\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\tprops: {\r\n\t\tname: 'world'\r\n\t}\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","update","$$","e","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","create_component","mount_component","customElement","m","new_on_destroy","on_mount","map","filter","on_destroy","destroy_component","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","t0_value","label","t1_value","a_href_value","href","dl","dt","dd","t0","t1","div","h3","title","list","create_if_block","h2","sideEle","div1","span1","div0","introduction","bigheader_changes","raw_value","description","innerHTML","projectTitle","t3_value","period","t8_value","projectGroup","if_block","h5","span0","span2","t3","t8","create_if_block_1","r","projects","t_value","content","li","t","span","companyName","t2_value","t4_value","each_value_2","detailList","each_value_1","techSkils","div4","div3","h4","div2","ul","t2","t4","each_value","workList","item","channels","contract","workSection","otherprojects","main","h1","body"],"mappings":"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"}